function [epsBr1,chiBr1]=BrNL_UX(fA,epsA,chiA,DA_L,DA_NL,fB,epsB,chiB,DB_L,DB_NL,epsBr0,chiBr0)

G_AL = eye(3) + DA_L*(epsA*eye(3) - epsBr0); % GAMMA_A Linear
invG_AL=diag(1./diag(G_AL)); % Inverse of GAMMA_A Linear 
gA=abs(trace(invG_AL)/3)^2;
G_ANL= DA_L*(gA*chiA*eye(3) - chiBr0) + DA_NL*(epsA*eye(3) - epsBr0); % GAMMA_B NonLinear
L_A= -invG_AL*G_ANL*invG_AL; % LAMBDA_A

% rhoA=G_AL(1,1)*G_AL(2,2)*G_ANL(3,3)+...
%      G_AL(2,2)*G_AL(3,3)*G_ANL(1,1)+...
%      G_AL(3,3)*G_AL(1,1)*G_ANL(2,2);
% L_A = 1/det(G_AL)*...
%     (diag([G_ANL(2,2)*G_AL(3,3)+G_ANL(3,3)*G_AL(2,2),...
%           G_ANL(1,1)*G_AL(3,3)+G_ANL(3,3)*G_AL(1,1),...
%           G_ANL(2,2)*G_AL(1,1)+G_ANL(1,1)*G_AL(2,2)]) - ...
%           rhoA*invG_AL);

G_BL = eye(3) + DB_L*(epsB*eye(3) - epsBr0); % GAMMA_B Linear
invG_BL=diag(1./diag(G_BL)); % Inverse of GAMMA_B Linear 
gB=abs(trace(invG_BL)/3)^2;
G_BNL= DB_L*(gB*chiB*eye(3) - chiBr0) + DB_NL*(epsB*eye(3) - epsBr0); % GAMMA_B NonLinear
L_B= -invG_BL*G_BNL*invG_BL; % LAMBDA_B
% rhoB=G_BL(1,1)*G_BL(2,2)*G_BNL(3,3)+...
%      G_BL(2,2)*G_BL(3,3)*G_BNL(1,1)+...
%      G_BL(3,3)*G_BL(1,1)*G_BNL(2,2);
% L_B = 1/det(G_BL)*...
%     (diag([G_BNL(2,2)*G_BL(3,3)+G_BNL(3,3)*G_BL(2,2),...
%            G_BNL(1,1)*G_BL(3,3)+G_BNL(3,3)*G_BL(1,1),...
%            G_BNL(2,2)*G_BL(1,1)+G_BNL(1,1)*G_BL(2,2)]) - ...
%           rhoB*invG_BL);

epsBr1=(fA*epsA*invG_AL + fB*epsB*invG_BL)*...
        inv(fA*invG_AL + fB*invG_BL);
chiBr1=(fA*(gA*chiA*invG_AL + (epsA*eye(3) - epsBr0)*L_A) + ...
        fB*(gB*chiB*invG_BL + (epsB*eye(3) - epsBr0)*L_B))* ...
        inv(fA*invG_AL + fB*invG_BL);
end